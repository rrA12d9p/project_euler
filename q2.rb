# Problem 2 - Even Fibonacci numbers
# Each new term in the Fibonacci sequence is generated by adding the previous two terms. By starting with 1 and 2, the first 10 terms will be:

# 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...

# By considering the terms in the Fibonacci sequence whose values do not exceed four million, find the sum of the even-valued terms.

# create the Fibonacci sequence
fib = [1, 2]
max_fib = 4_000_000

begin
	next_fib = fib[-1] + fib[-2]
	fib << next_fib if next_fib <= max_fib
end until next_fib > max_fib

# sum all the even values
evens = fib.select {|n| n.even?}
sum_evens = evens.reduce(:+)

puts sum_evens